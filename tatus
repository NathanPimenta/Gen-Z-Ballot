[1mdiff --git a/deploy_voting_system.js b/deploy_voting_system.js[m
[1mindex d7471ba..c53e0e8 100644[m
[1m--- a/deploy_voting_system.js[m
[1m+++ b/deploy_voting_system.js[m
[36m@@ -53,20 +53,12 @@[m [masync function main() {[m
     const commissionerAddress = await electionOfficer.getCommissionerAddress();[m
     console.log("Commissioner address:", commissionerAddress);[m
     [m
[31m-    // Check Voter's ElectionOfficer connection[m
[31m-    const voterElectionOfficerAddr = await voter.getElectionOfficerAddress();[m
[31m-    console.log("Voter's ElectionOfficer address:", voterElectionOfficerAddr);[m
[31m-    [m
     const voterTx = await voter.connect(deployer).setGeneralElection(await generalElections.getAddress());[m
     await voterTx.wait();[m
     console.log("âœ… Voter contract linked to GeneralElections");[m
 [m
     console.log("Setting GeneralElections in Candidate contract...");[m
     [m
[31m-    // Check Candidate's ElectionOfficer connection[m
[31m-    const candidateElectionOfficerAddr = await candidate.getElectionOfficerAddress();[m
[31m-    console.log("Candidate's ElectionOfficer address:", candidateElectionOfficerAddr);[m
[31m-    [m
     const candidateTx = await candidate.connect(deployer).setGeneralElection(await generalElections.getAddress());[m
     await candidateTx.wait();[m
     console.log("âœ… Candidate contract linked to GeneralElections");[m
[1mdiff --git a/hardhat.config.js b/hardhat.config.js[m
[1mindex 28d627f..6a3b36c 100644[m
[1m--- a/hardhat.config.js[m
[1m+++ b/hardhat.config.js[m
[36m@@ -14,6 +14,11 @@[m [mmodule.exports = {[m
       },[m
     },[m
   },[m
[32m+[m[32m  paths: {[m
[32m+[m[32m    sources: "./voting_contracts",[m
[32m+[m[32m    artifacts: "./artifacts",[m
[32m+[m[32m    cache: "./cache",[m
[32m+[m[32m  },[m
   networks: {[m
     hardhat: {[m
       chainId: 1337,[m
[1mdiff --git a/test/test_voting_system.js b/test/test_voting_system.js[m
[1mindex 98589d7..ac15728 100644[m
[1m--- a/test/test_voting_system.js[m
[1m+++ b/test/test_voting_system.js[m
[36m@@ -362,7 +362,10 @@[m [mdescribe("Voting System", function () {[m
             [m
             await candidate.connect(owner).emergencyRemoveCandidate(candidate1.address);[m
             [m
[31m-            expect(await candidate.isCandidateRegistered(candidate1.address)).to.be.false;[m
[32m+[m[32m            // Check that the candidate is no longer registered by trying to get their details[m
[32m+[m[32m            await expect([m
[32m+[m[32m                candidate.getCandidateDetails(1)[m
[32m+[m[32m            ).to.be.revertedWith("Candidate not found");[m
         });[m
     });[m
 [m
[1mdiff --git a/voting_contracts/Candidate.sol b/voting_contracts/Candidate.sol[m
[1mindex 6faea3d..4950906 100644[m
[1m--- a/voting_contracts/Candidate.sol[m
[1m+++ b/voting_contracts/Candidate.sol[m
[36m@@ -28,8 +28,8 @@[m [mcontract Candidate{[m
     mapping (address => bool) verifiedCandidates;[m
     mapping (address => bool) hasWon;[m
 [m
[31m-    uint immutable regStart = block.timestamp;[m
[31m-    uint immutable regEnd = regStart + 1 weeks;[m
[32m+[m[32m    uint public regStart;[m
[32m+[m[32m    uint public regEnd;[m
     uint public totalCandidates = 0;[m
     uint totalDeposits;[m
     uint primKey = 1;[m
[36m@@ -134,7 +134,7 @@[m [mcontract Candidate{[m
     }[m
 [m
     // New functions to support enhanced voting system[m
[31m-    function getCandidatesByConstituency(uint _constituencyId) external view returns (address[] memory) {[m
[32m+[m[32m    function getCandidatesByConstituency(uint _constituencyId) public view returns (address[] memory) {[m
         uint count = 0;[m
         [m
         // First pass: count candidates in constituency[m
[36m@@ -236,7 +236,7 @@[m [mcontract Candidate{[m
 [m
     // Emergency functions for election management[m
     function emergencyRemoveCandidate(address _candidateAddress) external {[m
[31m-        require(e.isElecCommissioner(msg.sender), "Only Election Commissioner can perform this action");[m
[32m+[m[32m        require(e.isElecCommissionerAddress(msg.sender), "Only Election Commissioner can perform this action");[m
         require(isCandidate[_candidateAddress], "Candidate not found");[m
         [m
         // Refund security deposit[m
[36m@@ -246,9 +246,11 @@[m [mcontract Candidate{[m
         }[m
         [m
         // Remove candidate[m
[32m+[m[32m        uint candidateId = candidates[_candidateAddress].candidateId;[m
         delete candidates[_candidateAddress];[m
         delete isCandidate[_candidateAddress];[m
         delete verifiedCandidates[_candidateAddress];[m
[32m+[m[32m        delete candidateIds[candidateId];[m
         [m
         totalCandidates--;[m
         totalDeposits -= deposit;[m
[36m@@ -261,15 +263,24 @@[m [mcontract Candidate{[m
         uint totalDepositsCollected[m
     ) {[m
         // Count unique constituencies[m
[31m-        mapping(uint => bool) memory constituencyCount;[m
         uint uniqueConstituencies = 0;[m
[32m+[m[32m        uint[] memory constituencyIds = new uint[](totalCandidates);[m
[32m+[m[32m        uint constituencyIndex = 0;[m
         [m
         for (uint i = 1; i < primKey; i++) {[m
             address candidateAddr = candidateIds[i];[m
             if (candidateAddr != address(0)) {[m
                 uint constituencyId = candidates[candidateAddr].constituencyId;[m
[31m-                if (!constituencyCount[constituencyId]) {[m
[31m-                    constituencyCount[constituencyId] = true;[m
[32m+[m[32m                bool found = false;[m
[32m+[m[32m                for (uint j = 0; j < constituencyIndex; j++) {[m
[32m+[m[32m                    if (constituencyIds[j] == constituencyId) {[m
[32m+[m[32m                        found = true;[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m                if (!found) {[m
[32m+[m[32m                    constituencyIds[constituencyIndex] = constituencyId;[m
[32m+[m[32m                    constituencyIndex++;[m
                     uniqueConstituencies++;[m
                 }[m
             }[m
[36m@@ -290,6 +301,8 @@[m [mcontract Candidate{[m
     }[m
 [m
     constructor(address _electionOfficerAddr){[m
[32m+[m[32m        regStart = block.timestamp;[m
[32m+[m[32m        regEnd = regStart + 1 weeks;[m
         e = ElectionOfficer(_electionOfficerAddr);[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/voting_contracts/ElectionOfficer.sol b/voting_contracts/ElectionOfficer.sol[m
[1mindex e5bcba1..0d4b851 100644[m
[1m--- a/voting_contracts/ElectionOfficer.sol[m
[1m+++ b/voting_contracts/ElectionOfficer.sol[m
[36m@@ -4,11 +4,10 @@[m [mpragma solidity ^0.8.20;[m
 contract ElectionOfficer{[m
 [m
     //Timestart and Timeend for a limited registration window (Will not change even if multiple contract instances are deployed)[m
[31m-    uint immutable timeStart = block.timestamp;[m
[31m-    uint immutable timeEnd = timeStart + 3 days;[m
[31m-[m
[31m-    uint immutable electionStart = timeEnd + 1 weeks;[m
[31m-    uint immutable electionEnd = electionStart + 1 days;[m
[32m+[m[32m    uint public timeStart;[m
[32m+[m[32m    uint public timeEnd;[m
[32m+[m[32m    uint public electionStart;[m
[32m+[m[32m    uint public electionEnd;[m
 [m
     struct electionOfficer{[m
 [m
[36m@@ -87,7 +86,10 @@[m [mcontract ElectionOfficer{[m
     }[m
 [m
     constructor () {[m
[31m-[m
[32m+[m[32m        timeStart = block.timestamp;[m
[32m+[m[32m        timeEnd = timeStart + 3 days;[m
[32m+[m[32m        electionStart = timeEnd + 1 weeks;[m
[32m+[m[32m        electionEnd = electionStart + 1 days;[m
         electionCommissioner = address(msg.sender);[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/voting_contracts/GeneralElections.sol b/voting_contracts/GeneralElections.sol[m
[1mindex 03b760e..7cdcfae 100644[m
[1m--- a/voting_contracts/GeneralElections.sol[m
[1m+++ b/voting_contracts/GeneralElections.sol[m
[36m@@ -26,11 +26,10 @@[m [mcontract GeneralElections{[m
     Candidate c;[m
     ElectionOfficer e;[m
 [m
[31m-    uint public immutable electionStart = block.timestamp + 3 days;[m
[31m-    uint public immutable electionEnd = electionStart + 1 weeks;[m
[31m-[m
[31m-    uint public immutable bufferStart = electionEnd + 2 days;[m
[31m-    uint public immutable bufferEnd = bufferStart + 1 weeks;[m
[32m+[m[32m    uint public electionStart;[m
[32m+[m[32m    uint public electionEnd;[m
[32m+[m[32m    uint public bufferStart;[m
[32m+[m[32m    uint public bufferEnd;[m
 [m
     uint public totalVotes = 0;[m
     bool public isElectionPaused = false;[m
[36m@@ -268,7 +267,7 @@[m [mcontract GeneralElections{[m
     }[m
 [m
     // Vote verification and audit functions[m
[31m-    function generateVoteProof(uint _voterId, uint _candidateId) internal pure returns (bytes32) {[m
[32m+[m[32m    function generateVoteProof(uint _voterId, uint _candidateId) internal view returns (bytes32) {[m
         return keccak256(abi.encodePacked(_voterId, _candidateId, block.timestamp));[m
     }[m
 [m
[36m@@ -310,6 +309,10 @@[m [mcontract GeneralElections{[m
     }[m
 [m
     constructor(address _candidate, address _voter, address _electionOfficer){[m
[32m+[m[32m        electionStart = block.timestamp + 3 days;[m
[32m+[m[32m        electionEnd = electionStart + 1 weeks;[m
[32m+[m[32m        bufferStart = electionEnd + 2 days;[m
[32m+[m[32m        bufferEnd = bufferStart + 1 weeks;[m
         c = Candidate(_candidate);[m
         v = Voter(_voter);[m
         e = ElectionOfficer(_electionOfficer);[m
[1mdiff --git a/voting_contracts/Voter.sol b/voting_contracts/Voter.sol[m
[1mindex 8f8b278..99b063e 100644[m
[1m--- a/voting_contracts/Voter.sol[m
[1m+++ b/voting_contracts/Voter.sol[m
[36m@@ -6,11 +6,10 @@[m [mimport './ElectionOfficer.sol';[m
 [m
 contract Voter{[m
 [m
[31m-    uint immutable startTime = block.timestamp;[m
[31m-    uint immutable endTime = startTime + 1 weeks;[m
[31m-[m
[31m-    uint immutable electionStart = endTime + 1 weeks;[m
[31m-    uint immutable electionEnd = electionStart + 1 days;[m
[32m+[m[32m    uint public startTime;[m
[32m+[m[32m    uint public endTime;[m
[32m+[m[32m    uint public electionStart;[m
[32m+[m[32m    uint public electionEnd;[m
 [m
     address public gElect;[m
     address public electionCommission;[m
[36m@@ -237,7 +236,8 @@[m [mcontract Voter{[m
     ) {[m
         uint verified = 0;[m
         uint voted = 0;[m
[31m-        mapping(uint => bool) memory constituencyCount;[m
[32m+[m[32m        uint[] memory constituencyIds = new uint[](voterCount);[m
[32m+[m[32m        uint constituencyIndex = 0;[m
         uint uniqueConstituencies = 0;[m
         [m
         for (uint i = 1; i < primKey; i++) {[m
[36m@@ -251,8 +251,16 @@[m [mcontract Voter{[m
                 }[m
                 [m
                 uint constituencyId = voterMap[voterAddr].ConstituencyId;[m
[31m-                if (!constituencyCount[constituencyId]) {[m
[31m-                    constituencyCount[constituencyId] = true;[m
[32m+[m[32m                bool found = false;[m
[32m+[m[32m                for (uint j = 0; j < constituencyIndex; j++) {[m
[32m+[m[32m                    if (constituencyIds[j] == constituencyId) {[m
[32m+[m[32m                        found = true;[m
[32m+[m[32m                        break;[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m                if (!found) {[m
[32m+[m[32m                    constituencyIds[constituencyIndex] = constituencyId;[m
[32m+[m[32m                    constituencyIndex++;[m
                     uniqueConstituencies++;[m
                 }[m
             }[m
[36m@@ -299,7 +307,7 @@[m [mcontract Voter{[m
 [m
     // Emergency functions for election management[m
     function emergencyRemoveVoter(address _voterAddress) external {[m
[31m-        require(e.isElecCommissioner(msg.sender), "Only Election Commissioner can perform this action");[m
[32m+[m[32m        require(e.isElecCommissionerAddress(msg.sender), "Only Election Commissioner can perform this action");[m
         require(voterMap[_voterAddress].id > 0, "Voter not found");[m
         [m
         uint voterId = voterMap[_voterAddress].id;[m
[36m@@ -345,6 +353,10 @@[m [mcontract Voter{[m
     }[m
 [m
     constructor (address _ElectionOfficerAddr) {[m
[32m+[m[32m        startTime = block.timestamp;[m
[32m+[m[32m        endTime = startTime + 1 weeks;[m
[32m+[m[32m        electionStart = endTime + 1 weeks;[m
[32m+[m[32m        electionEnd = electionStart + 1 days;[m
         e = ElectionOfficer(_ElectionOfficerAddr);[m
     }[m
 }[m
\ No newline at end of file[m
